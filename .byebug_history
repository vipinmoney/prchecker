exit
pull_requests.length
pull_requests
(pull_requests = grace_period_over_for(pull_requests)) && pull_requests.length > 0
c
grace_period_over_for(pull_requests)
 pull_requests = grace_period_over_for(pull_requests) && pull_requests.length > 0
c
grace_period_over?(pull_requests) && pull_requests.length > 0
pull_requests = grace_period_over?(pull_requests)
c
pull_requests.map(&:title)
pull_requests = fetch_pull_requests
@security_vulnerability_only = false
pull_requests.map(&:title)
pull_requests = fetch_pull_requests
exit
@security_vulnerability_only
pull_requests.map(&:title)
prs.first.title
prs.first.labels.map(&:name)
pull_requests = fetch_pull_requests
exit
prs.first.labels.map(&:name).include?('security')
prs.first.labels.map(&:name)
prs.first.title
prs.first.labels
prs.last.labels
prs.last.keys
prs.last.class
prs.last.attributes
prs.last
prs = @client.pull_requests(ENV['REPO_NAME'], :state => 'open').select{|pr| pr.user.login == 'dependabot-preview[bot]'}
@pull_requests.last
pull_requests.last
.last
@security_patch_only
exit
Time.now < grace_period
Time.now > grace_period
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}.last.created_at < grace_period
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}.last.created_at > grace_period
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}.last.created_at 
grace_period = Time.now.utc - (day_in_seconds * 1)
day_in_seconds = 86400
grace_period = Time.now.utc - (day_in_seconds * 1)
grace_period = DateTime.now - (day_in_seconds * 1)
grace_period = DFateTime.now - (day_in_seconds * 1)
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}.last.created_at 
grace_period = Time.now - (day_in_seconds * 1)
grace_period = Time.now - (day_in_seconds * @grace_period_in_days)
grace_period =Time.ago(day_in_seconds * 1)
day_in_seconds = 606024
7.days
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}.last.created_at < DateTime.now - 10.days
DateTime.now
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}.length
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}.last.updated_at
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}.last.created_at.class
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}.last.created_at
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}.last.active_lock_reason
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}.last.body
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}.last.title
pull_requests.select{|pr| pr.user.login == 'dependabot-preview[bot]'}
pull_requests.last.user
pull_requests.select{|pr| pr.login == 'dependabot-preview[bot]'}
pull_requests.collect{|pr| pr.login == 'dependabot-preview[bot]'}
pull_requests.filter{|pr| pr.login == 'dependabot-preview[bot]'}
pull_requests.last.user
pull_requests.last.url
pull_requests = @client.pull_requests(ENV['REPO_NAME'], :state => 'open')
pull_requests = @client.pull_requests(ENV['REPO_NAME'], :state => 'closed')
c
ENV['GITHUB_ACCESS_TOKEN']
next
c
ENV.keys
ENV
